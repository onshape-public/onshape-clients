/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AppElementsApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_AppElementsApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_AppElementsApi_H_


#include "../ApiClient.h"

#include "BTAppElementCommitTransactionParams.h"
#include "BTAppElementContentInfo.h"
#include "BTAppElementHistoryInfo.h"
#include "BTAppElementModifyInfo.h"
#include "BTAppElementParams.h"
#include "BTAppElementReferenceInfo.h"
#include "BTAppElementReferenceParams.h"
#include "BTAppElementReferenceResolveInfo.h"
#include "BTAppElementReferencesResolveInfo.h"
#include "BTAppElementStartTransactionParams.h"
#include "BTAppElementUpdateParams.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  AppElementsApi 
{
public:

    explicit AppElementsApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~AppElementsApi();

    /// <summary>
    /// Commit Transaction
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wid"></param>
    /// <param name="tid"></param>
    /// <param name="bTAppElementCommitTransactionParams"></param>
    pplx::task<std::shared_ptr<BTAppElementModifyInfo>> commitTransaction(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wid,
        utility::string_t tid,
        std::shared_ptr<BTAppElementCommitTransactionParams> bTAppElementCommitTransactionParams
    ) const;
    /// <summary>
    /// Create Element.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="wid"></param>
    /// <param name="bTAppElementParams"></param>
    pplx::task<std::shared_ptr<BTAppElementModifyInfo>> createElement(
        utility::string_t did,
        utility::string_t wid,
        std::shared_ptr<BTAppElementParams> bTAppElementParams
    ) const;
    /// <summary>
    /// Create Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="bTAppElementReferenceParams"></param>
    pplx::task<std::shared_ptr<BTAppElementReferenceInfo>> createReference(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        std::shared_ptr<BTAppElementReferenceParams> bTAppElementReferenceParams
    ) const;
    /// <summary>
    /// Delete a Sub-element
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="sid"></param>
    /// <param name="transactionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="parentChangeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="description"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<BTAppElementModifyInfo>> deleteAppElementContent(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        utility::string_t sid,
        boost::optional<utility::string_t> transactionId,
        boost::optional<utility::string_t> parentChangeId,
        boost::optional<utility::string_t> description
    ) const;
    /// <summary>
    /// Delete Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="rid"></param>
    /// <param name="transactionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="parentChangeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="description"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<BTAppElementReferenceInfo>> deleteReference(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        utility::string_t rid,
        boost::optional<utility::string_t> transactionId,
        boost::optional<utility::string_t> parentChangeId,
        boost::optional<utility::string_t> description
    ) const;
    /// <summary>
    /// Get History
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    pplx::task<std::shared_ptr<BTAppElementHistoryInfo>> getAppElementHistory(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid
    ) const;
    /// <summary>
    /// Get Content
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="transactionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="changeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="baseChangeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="subelementId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="linkDocumentId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<BTAppElementContentInfo>> getSubElementContent(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        boost::optional<utility::string_t> transactionId,
        boost::optional<utility::string_t> changeId,
        boost::optional<utility::string_t> baseChangeId,
        boost::optional<utility::string_t> subelementId,
        boost::optional<utility::string_t> linkDocumentId
    ) const;
    /// <summary>
    /// Get Sub-element IDs
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="transactionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="changeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<BTAppElementModifyInfo>> getSubelementIds(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        boost::optional<utility::string_t> transactionId,
        boost::optional<utility::string_t> changeId
    ) const;
    /// <summary>
    /// Resolve Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="rid"></param>
    /// <param name="transactionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="parentChangeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="includeInternal"> (optional, default to false)</param>
    /// <param name="linkDocumentId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<BTAppElementReferenceResolveInfo>> resolveReference(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        utility::string_t rid,
        boost::optional<utility::string_t> transactionId,
        boost::optional<utility::string_t> parentChangeId,
        boost::optional<bool> includeInternal,
        boost::optional<utility::string_t> linkDocumentId
    ) const;
    /// <summary>
    /// Resolve references.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="transactionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="parentChangeId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="includeInternal"> (optional, default to false)</param>
    /// <param name="linkDocumentId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="referenceIds"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<BTAppElementReferencesResolveInfo>> resolveReferences(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        boost::optional<utility::string_t> transactionId,
        boost::optional<utility::string_t> parentChangeId,
        boost::optional<bool> includeInternal,
        boost::optional<utility::string_t> linkDocumentId,
        boost::optional<utility::string_t> referenceIds
    ) const;
    /// <summary>
    /// Start Transaction
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wid"></param>
    /// <param name="bTAppElementStartTransactionParams"></param>
    pplx::task<std::shared_ptr<BTAppElementModifyInfo>> startTransaction(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wid,
        std::shared_ptr<BTAppElementStartTransactionParams> bTAppElementStartTransactionParams
    ) const;
    /// <summary>
    /// Update Element
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="bTAppElementUpdateParams"></param>
    pplx::task<std::shared_ptr<BTAppElementModifyInfo>> updateAppElement(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        std::shared_ptr<BTAppElementUpdateParams> bTAppElementUpdateParams
    ) const;
    /// <summary>
    /// Update Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="did"></param>
    /// <param name="eid"></param>
    /// <param name="wvm"></param>
    /// <param name="wvmid"></param>
    /// <param name="rid"></param>
    /// <param name="bTAppElementReferenceParams"></param>
    pplx::task<std::shared_ptr<BTAppElementReferenceInfo>> updateReference(
        utility::string_t did,
        utility::string_t eid,
        utility::string_t wvm,
        utility::string_t wvmid,
        utility::string_t rid,
        std::shared_ptr<BTAppElementReferenceParams> bTAppElementReferenceParams
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_AppElementsApi_H_ */

