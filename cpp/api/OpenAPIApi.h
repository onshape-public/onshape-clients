/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OpenAPIApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_OpenAPIApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_OpenAPIApi_H_


#include "../ApiClient.h"

#include <cpprest/details/basic_types.h>
#include "../ModelBase.h"

#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  OpenAPIApi 
{
public:

    explicit OpenAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~OpenAPIApi();

    /// <summary>
    /// OpenAPI spec documentation for the Onshape REST API.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="excludedTags">If an operation contains an excluded tag, it is not returned from this endpoint. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="includedTags">Return only operations with tags included in includedTags. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="includeDeprecated">Include deprecated endpoints. (optional, default to false)</param>
    /// <param name="documentationStatus">Only return endpoints that have the specified document status. Default is to return all the endpoints the user should have access to. (optional, default to std::vector&lt;std::shared_ptr&lt;utility::string_t&gt;&gt;())</param>
    pplx::task<void> getOpenApi(
        boost::optional<utility::string_t> excludedTags,
        boost::optional<utility::string_t> includedTags,
        boost::optional<bool> includeDeprecated,
        boost::optional<std::vector<utility::string_t>> documentationStatus
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_OpenAPIApi_H_ */

