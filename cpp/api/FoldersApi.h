/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FoldersApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_FoldersApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_FoldersApi_H_


#include "../ApiClient.h"

#include "BTAclInfo.h"
#include "BTShareParams.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  FoldersApi 
{
public:

    explicit FoldersApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~FoldersApi();

    /// <summary>
    /// Get Access Control List
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="fid"></param>
    pplx::task<std::shared_ptr<BTAclInfo>> getFolderAcl(
        utility::string_t fid
    ) const;
    /// <summary>
    /// Share Folder
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="fid"></param>
    /// <param name="bTShareParams"></param>
    pplx::task<std::shared_ptr<BTAclInfo>> share(
        utility::string_t fid,
        std::shared_ptr<BTShareParams> bTShareParams
    ) const;
    /// <summary>
    /// Unshare Folder
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="fid"></param>
    /// <param name="eid"></param>
    /// <param name="entryType"> (optional, default to 0)</param>
    pplx::task<void> unShare(
        utility::string_t fid,
        utility::string_t eid,
        boost::optional<int32_t> entryType
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_FoldersApi_H_ */

