/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTAssemblyOccurrenceInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTAssemblyOccurrenceInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTAssemblyOccurrenceInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTAssemblyOccurrenceInfo
    : public ModelBase
{
public:
    BTAssemblyOccurrenceInfo();
    virtual ~BTAssemblyOccurrenceInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTAssemblyOccurrenceInfo members

    /// <summary>
    /// 
    /// </summary>
    bool isFixed() const;
    bool fixedIsSet() const;
    void unsetFixed();

    void setFixed(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHidden() const;
    bool hiddenIsSet() const;
    void unsetHidden();

    void setHidden(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getPath();
    bool pathIsSet() const;
    void unsetPath();

    void setPath(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<double>& getTransform();
    bool transformIsSet() const;
    void unsetTransform();

    void setTransform(std::vector<double> value);


protected:
    bool m_Fixed;
    bool m_FixedIsSet;
    bool m_Hidden;
    bool m_HiddenIsSet;
    std::vector<utility::string_t> m_Path;
    bool m_PathIsSet;
    std::vector<double> m_Transform;
    bool m_TransformIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTAssemblyOccurrenceInfo_H_ */
