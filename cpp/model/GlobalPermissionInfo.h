/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GlobalPermissionInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GlobalPermissionInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GlobalPermissionInfo_H_


#include "../ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  GlobalPermissionInfo
    : public ModelBase
{
public:
    GlobalPermissionInfo();
    virtual ~GlobalPermissionInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GlobalPermissionInfo members

    /// <summary>
    /// 
    /// </summary>
    bool isAccessReports() const;
    bool accessReportsIsSet() const;
    void unsetAccessReports();

    void setAccessReports(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isAdminEnterprise() const;
    bool adminEnterpriseIsSet() const;
    void unsetAdminEnterprise();

    void setAdminEnterprise(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isAllowAppStoreAccess() const;
    bool allowAppStoreAccessIsSet() const;
    void unsetAllowAppStoreAccess();

    void setAllowAppStoreAccess(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isApproveReleases() const;
    bool approveReleasesIsSet() const;
    void unsetApproveReleases();

    void setApproveReleases(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isCreateProject() const;
    bool createProjectIsSet() const;
    void unsetCreateProject();

    void setCreateProject(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isCreateReleases() const;
    bool createReleasesIsSet() const;
    void unsetCreateReleases();

    void setCreateReleases(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isDeletePermanently() const;
    bool deletePermanentlyIsSet() const;
    void unsetDeletePermanently();

    void setDeletePermanently(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isManageGuestUsers() const;
    bool manageGuestUsersIsSet() const;
    void unsetManageGuestUsers();

    void setManageGuestUsers(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isManageRbac() const;
    bool manageRbacIsSet() const;
    void unsetManageRbac();

    void setManageRbac(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isManageUsers() const;
    bool manageUsersIsSet() const;
    void unsetManageUsers();

    void setManageUsers(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isShareForAnonymousAccess() const;
    bool shareForAnonymousAccessIsSet() const;
    void unsetShareForAnonymousAccess();

    void setShareForAnonymousAccess(bool value);


protected:
    bool m_AccessReports;
    bool m_AccessReportsIsSet;
    bool m_AdminEnterprise;
    bool m_AdminEnterpriseIsSet;
    bool m_AllowAppStoreAccess;
    bool m_AllowAppStoreAccessIsSet;
    bool m_ApproveReleases;
    bool m_ApproveReleasesIsSet;
    bool m_CreateProject;
    bool m_CreateProjectIsSet;
    bool m_CreateReleases;
    bool m_CreateReleasesIsSet;
    bool m_DeletePermanently;
    bool m_DeletePermanentlyIsSet;
    bool m_ManageGuestUsers;
    bool m_ManageGuestUsersIsSet;
    bool m_ManageRbac;
    bool m_ManageRbacIsSet;
    bool m_ManageUsers;
    bool m_ManageUsersIsSet;
    bool m_ShareForAnonymousAccess;
    bool m_ShareForAnonymousAccessIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GlobalPermissionInfo_H_ */
