/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTThumbnailSizeInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTThumbnailSizeInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTThumbnailSizeInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTThumbnailSizeInfo
    : public ModelBase
{
public:
    BTThumbnailSizeInfo();
    virtual ~BTThumbnailSizeInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTThumbnailSizeInfo members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHref() const;
    bool hrefIsSet() const;
    void unsetHref();

    void setHref(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMediaType() const;
    bool mediaTypeIsSet() const;
    void unsetMediaType();

    void setMediaType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRenderMode() const;
    bool renderModeIsSet() const;
    void unsetRenderMode();

    void setRenderMode(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSheetName() const;
    bool sheetNameIsSet() const;
    void unsetSheetName();

    void setSheetName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSize() const;
    bool sizeIsSet() const;
    void unsetSize();

    void setSize(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUniqueId() const;
    bool uniqueIdIsSet() const;
    void unsetUniqueId();

    void setUniqueId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getViewOrientation() const;
    bool viewOrientationIsSet() const;
    void unsetViewOrientation();

    void setViewOrientation(const utility::string_t& value);


protected:
    utility::string_t m_Href;
    bool m_HrefIsSet;
    utility::string_t m_MediaType;
    bool m_MediaTypeIsSet;
    utility::string_t m_RenderMode;
    bool m_RenderModeIsSet;
    utility::string_t m_SheetName;
    bool m_SheetNameIsSet;
    utility::string_t m_Size;
    bool m_SizeIsSet;
    utility::string_t m_UniqueId;
    bool m_UniqueIdIsSet;
    utility::string_t m_ViewOrientation;
    bool m_ViewOrientationIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTThumbnailSizeInfo_H_ */
