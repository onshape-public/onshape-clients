/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTPublishedWorkflowInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTPublishedWorkflowInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTPublishedWorkflowInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTPublishedWorkflowInfo
    : public ModelBase
{
public:
    BTPublishedWorkflowInfo();
    virtual ~BTPublishedWorkflowInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTPublishedWorkflowInfo members

    /// <summary>
    /// 
    /// </summary>
    int32_t getActiveState() const;
    bool activeStateIsSet() const;
    void unsetActiveState();

    void setActiveState(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCompanyId() const;
    bool companyIdIsSet() const;
    void unsetCompanyId();

    void setCompanyId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocumentId() const;
    bool documentIdIsSet() const;
    void unsetDocumentId();

    void setDocumentId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getElementId() const;
    bool elementIdIsSet() const;
    void unsetElementId();

    void setElementId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getImageSrc() const;
    bool imageSrcIsSet() const;
    void unsetImageSrc();

    void setImageSrc(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsObsoletion() const;
    bool isObsoletionIsSet() const;
    void unsetIsObsoletion();

    void setIsObsoletion(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsPickable() const;
    bool isPickableIsSet() const;
    void unsetIsPickable();

    void setIsPickable(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getJson() const;
    bool jsonIsSet() const;
    void unsetJson();

    void setJson(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getObjectType() const;
    bool objectTypeIsSet() const;
    void unsetObjectType();

    void setObjectType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getOwnerType() const;
    bool ownerTypeIsSet() const;
    void unsetOwnerType();

    void setOwnerType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVersionId() const;
    bool versionIdIsSet() const;
    void unsetVersionId();

    void setVersionId(const utility::string_t& value);


protected:
    int32_t m_ActiveState;
    bool m_ActiveStateIsSet;
    utility::string_t m_CompanyId;
    bool m_CompanyIdIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_DocumentId;
    bool m_DocumentIdIsSet;
    utility::string_t m_ElementId;
    bool m_ElementIdIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_ImageSrc;
    bool m_ImageSrcIsSet;
    bool m_IsObsoletion;
    bool m_IsObsoletionIsSet;
    bool m_IsPickable;
    bool m_IsPickableIsSet;
    utility::string_t m_Json;
    bool m_JsonIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    int32_t m_ObjectType;
    bool m_ObjectTypeIsSet;
    int32_t m_OwnerType;
    bool m_OwnerTypeIsSet;
    utility::string_t m_VersionId;
    bool m_VersionIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTPublishedWorkflowInfo_H_ */
