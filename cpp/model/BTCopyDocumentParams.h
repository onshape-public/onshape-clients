/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTCopyDocumentParams.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTCopyDocumentParams_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTCopyDocumentParams_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTCopyDocumentParams
    : public ModelBase
{
public:
    BTCopyDocumentParams();
    virtual ~BTCopyDocumentParams();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTCopyDocumentParams members

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getBetaCapabilityIds();
    bool betaCapabilityIdsIsSet() const;
    void unsetBetaCapabilityIds();

    void setBetaCapabilityIds(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsPublic() const;
    bool isPublicIsSet() const;
    void unsetIsPublic();

    void setIsPublic(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewName() const;
    bool newNameIsSet() const;
    void unsetNewName();

    void setNewName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOwnerId() const;
    bool ownerIdIsSet() const;
    void unsetOwnerId();

    void setOwnerId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getOwnerTypeIndex() const;
    bool ownerTypeIndexIsSet() const;
    void unsetOwnerTypeIndex();

    void setOwnerTypeIndex(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getParentId() const;
    bool parentIdIsSet() const;
    void unsetParentId();

    void setParentId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProjectId() const;
    bool projectIdIsSet() const;
    void unsetProjectId();

    void setProjectId(const utility::string_t& value);


protected:
    std::vector<utility::string_t> m_BetaCapabilityIds;
    bool m_BetaCapabilityIdsIsSet;
    bool m_IsPublic;
    bool m_IsPublicIsSet;
    utility::string_t m_NewName;
    bool m_NewNameIsSet;
    utility::string_t m_OwnerId;
    bool m_OwnerIdIsSet;
    int32_t m_OwnerTypeIndex;
    bool m_OwnerTypeIndexIsSet;
    utility::string_t m_ParentId;
    bool m_ParentIdIsSet;
    utility::string_t m_ProjectId;
    bool m_ProjectIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTCopyDocumentParams_H_ */
