/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTMParameterDerived_864.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterDerived_864_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterDerived_864_H_


#include "BTMImport_136.h"
#include "BTMParameter_1.h"
#include "BTPModuleId_235.h"
#include "BTMParameterDerived_864_allOf.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTMParameterDerived_864
    : public BTMParameter_1
{
public:
    BTMParameterDerived_864();
    virtual ~BTMParameterDerived_864();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTMParameterDerived_864 members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTPModuleId_235> getModuleId() const;
    bool moduleIdIsSet() const;
    void unsetModuleId();

    void setModuleId(const std::shared_ptr<BTPModuleId_235>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRNamespace() const;
    bool rNamespaceIsSet() const;
    void unsetr_namespace();

    void setRNamespace(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BTMImport_136>>& getImports();
    bool importsIsSet() const;
    void unsetImports();

    void setImports(const std::vector<std::shared_ptr<BTMImport_136>>& value);


protected:
    std::shared_ptr<BTPModuleId_235> m_ModuleId;
    bool m_ModuleIdIsSet;
    utility::string_t m_r_namespace;
    bool m_r_namespaceIsSet;
    std::vector<std::shared_ptr<BTMImport_136>> m_Imports;
    bool m_ImportsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterDerived_864_H_ */
