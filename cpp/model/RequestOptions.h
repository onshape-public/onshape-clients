/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RequestOptions.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RequestOptions_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RequestOptions_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  RequestOptions
    : public ModelBase
{
public:
    RequestOptions();
    virtual ~RequestOptions();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RequestOptions members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getApiKey() const;
    bool apiKeyIsSet() const;
    void unsetApiKey();

    void setApiKey(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getConnectTimeout() const;
    bool connectTimeoutIsSet() const;
    void unsetConnectTimeout();

    void setConnectTimeout(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIdempotencyKey() const;
    bool idempotencyKeyIsSet() const;
    void unsetIdempotencyKey();

    void setIdempotencyKey(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getReadTimeout() const;
    bool readTimeoutIsSet() const;
    void unsetReadTimeout();

    void setReadTimeout(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStripeAccount() const;
    bool stripeAccountIsSet() const;
    void unsetStripeAccount();

    void setStripeAccount(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStripeVersion() const;
    bool stripeVersionIsSet() const;
    void unsetStripeVersion();

    void setStripeVersion(const utility::string_t& value);


protected:
    utility::string_t m_ApiKey;
    bool m_ApiKeyIsSet;
    int32_t m_ConnectTimeout;
    bool m_ConnectTimeoutIsSet;
    utility::string_t m_IdempotencyKey;
    bool m_IdempotencyKeyIsSet;
    int32_t m_ReadTimeout;
    bool m_ReadTimeoutIsSet;
    utility::string_t m_StripeAccount;
    bool m_StripeAccountIsSet;
    utility::string_t m_StripeVersion;
    bool m_StripeVersionIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RequestOptions_H_ */
