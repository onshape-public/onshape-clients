/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTMParameterQuantity_147.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterQuantity_147_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterQuantity_147_H_


#include "BTMParameter_1.h"
#include "BTMParameterQuantity_147_allOf.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTMParameterQuantity_147
    : public BTMParameter_1
{
public:
    BTMParameterQuantity_147();
    virtual ~BTMParameterQuantity_147();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTMParameterQuantity_147 members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUnits() const;
    bool unitsIsSet() const;
    void unsetUnits();

    void setUnits(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsInteger() const;
    bool isIntegerIsSet() const;
    void unsetIsInteger();

    void setIsInteger(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getExpression() const;
    bool expressionIsSet() const;
    void unsetExpression();

    void setExpression(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getValue() const;
    bool valueIsSet() const;
    void unsetValue();

    void setValue(double value);


protected:
    utility::string_t m_Units;
    bool m_UnitsIsSet;
    bool m_IsInteger;
    bool m_IsIntegerIsSet;
    utility::string_t m_Expression;
    bool m_ExpressionIsSet;
    double m_Value;
    bool m_ValueIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterQuantity_147_H_ */
