/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ThreeDSecure.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ThreeDSecure_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ThreeDSecure_H_


#include "../ModelBase.h"

#include "Card.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  ThreeDSecure
    : public ModelBase
{
public:
    ThreeDSecure();
    virtual ~ThreeDSecure();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ThreeDSecure members

    /// <summary>
    /// 
    /// </summary>
    int64_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isAuthenticated() const;
    bool authenticatedIsSet() const;
    void unsetAuthenticated();

    void setAuthenticated(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Card> getCard() const;
    bool cardIsSet() const;
    void unsetCard();

    void setCard(const std::shared_ptr<Card>& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCreated() const;
    bool createdIsSet() const;
    void unsetCreated();

    void setCreated(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();

    void setCurrency(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isLivemode() const;
    bool livemodeIsSet() const;
    void unsetLivemode();

    void setLivemode(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getObject() const;
    bool objectIsSet() const;
    void unsetobject();

    void setObject(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRedirectURL() const;
    bool redirectURLIsSet() const;
    void unsetRedirectURL();

    void setRedirectURL(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const utility::string_t& value);


protected:
    int64_t m_Amount;
    bool m_AmountIsSet;
    bool m_Authenticated;
    bool m_AuthenticatedIsSet;
    std::shared_ptr<Card> m_Card;
    bool m_CardIsSet;
    int64_t m_Created;
    bool m_CreatedIsSet;
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    bool m_Livemode;
    bool m_LivemodeIsSet;
    utility::string_t m_object;
    bool m_objectIsSet;
    utility::string_t m_RedirectURL;
    bool m_RedirectURLIsSet;
    utility::string_t m_Status;
    bool m_StatusIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ThreeDSecure_H_ */
