/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTListResponseBTWebhookInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTListResponseBTWebhookInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTListResponseBTWebhookInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>
#include "BTWebhookInfo.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTListResponseBTWebhookInfo
    : public ModelBase
{
public:
    BTListResponseBTWebhookInfo();
    virtual ~BTListResponseBTWebhookInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTListResponseBTWebhookInfo members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHref() const;
    bool hrefIsSet() const;
    void unsetHref();

    void setHref(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BTWebhookInfo>>& getItems();
    bool itemsIsSet() const;
    void unsetItems();

    void setItems(const std::vector<std::shared_ptr<BTWebhookInfo>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNext() const;
    bool nextIsSet() const;
    void unsetNext();

    void setNext(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPrevious() const;
    bool previousIsSet() const;
    void unsetPrevious();

    void setPrevious(const utility::string_t& value);


protected:
    utility::string_t m_Href;
    bool m_HrefIsSet;
    std::vector<std::shared_ptr<BTWebhookInfo>> m_Items;
    bool m_ItemsIsSet;
    utility::string_t m_Next;
    bool m_NextIsSet;
    utility::string_t m_Previous;
    bool m_PreviousIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTListResponseBTWebhookInfo_H_ */
