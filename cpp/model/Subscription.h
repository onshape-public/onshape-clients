/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Subscription.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Subscription_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Subscription_H_


#include "../ModelBase.h"

#include "Customer.h"
#include "Plan.h"
#include "SubscriptionItemCollection.h"
#include <cpprest/details/basic_types.h>
#include <map>
#include "Discount.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Subscription
    : public ModelBase
{
public:
    Subscription();
    virtual ~Subscription();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Subscription members

    /// <summary>
    /// 
    /// </summary>
    double getApplicationFeePercent() const;
    bool applicationFeePercentIsSet() const;
    void unsetApplicationFeePercent();

    void setApplicationFeePercent(double value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBilling() const;
    bool billingIsSet() const;
    void unsetBilling();

    void setBilling(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isCancelAtPeriodEnd() const;
    bool cancelAtPeriodEndIsSet() const;
    void unsetCancelAtPeriodEnd();

    void setCancelAtPeriodEnd(bool value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCanceledAt() const;
    bool canceledAtIsSet() const;
    void unsetCanceledAt();

    void setCanceledAt(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCreated() const;
    bool createdIsSet() const;
    void unsetCreated();

    void setCreated(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCurrentPeriodEnd() const;
    bool currentPeriodEndIsSet() const;
    void unsetCurrentPeriodEnd();

    void setCurrentPeriodEnd(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCurrentPeriodStart() const;
    bool currentPeriodStartIsSet() const;
    void unsetCurrentPeriodStart();

    void setCurrentPeriodStart(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomer() const;
    bool customerIsSet() const;
    void unsetCustomer();

    void setCustomer(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Customer> getCustomerObject() const;
    bool customerObjectIsSet() const;
    void unsetCustomerObject();

    void setCustomerObject(const std::shared_ptr<Customer>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getDaysUntilDue() const;
    bool daysUntilDueIsSet() const;
    void unsetDaysUntilDue();

    void setDaysUntilDue(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Discount> getDiscount() const;
    bool discountIsSet() const;
    void unsetDiscount();

    void setDiscount(const std::shared_ptr<Discount>& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getEndedAt() const;
    bool endedAtIsSet() const;
    void unsetEndedAt();

    void setEndedAt(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, utility::string_t>& getMetadata();
    bool metadataIsSet() const;
    void unsetMetadata();

    void setMetadata(const std::map<utility::string_t, utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getObject() const;
    bool objectIsSet() const;
    void unsetobject();

    void setObject(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Plan> getPlan() const;
    bool planIsSet() const;
    void unsetPlan();

    void setPlan(const std::shared_ptr<Plan>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getQuantity() const;
    bool quantityIsSet() const;
    void unsetQuantity();

    void setQuantity(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getStart() const;
    bool startIsSet() const;
    void unsetStart();

    void setStart(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionItemCollection> getSubscriptionItems() const;
    bool subscriptionItemsIsSet() const;
    void unsetSubscriptionItems();

    void setSubscriptionItems(const std::shared_ptr<SubscriptionItemCollection>& value);

    /// <summary>
    /// 
    /// </summary>
    double getTaxPercent() const;
    bool taxPercentIsSet() const;
    void unsetTaxPercent();

    void setTaxPercent(double value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getTrialEnd() const;
    bool trialEndIsSet() const;
    void unsetTrialEnd();

    void setTrialEnd(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getTrialStart() const;
    bool trialStartIsSet() const;
    void unsetTrialStart();

    void setTrialStart(int64_t value);


protected:
    double m_ApplicationFeePercent;
    bool m_ApplicationFeePercentIsSet;
    utility::string_t m_Billing;
    bool m_BillingIsSet;
    bool m_CancelAtPeriodEnd;
    bool m_CancelAtPeriodEndIsSet;
    int64_t m_CanceledAt;
    bool m_CanceledAtIsSet;
    int64_t m_Created;
    bool m_CreatedIsSet;
    int64_t m_CurrentPeriodEnd;
    bool m_CurrentPeriodEndIsSet;
    int64_t m_CurrentPeriodStart;
    bool m_CurrentPeriodStartIsSet;
    utility::string_t m_Customer;
    bool m_CustomerIsSet;
    std::shared_ptr<Customer> m_CustomerObject;
    bool m_CustomerObjectIsSet;
    int32_t m_DaysUntilDue;
    bool m_DaysUntilDueIsSet;
    std::shared_ptr<Discount> m_Discount;
    bool m_DiscountIsSet;
    int64_t m_EndedAt;
    bool m_EndedAtIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    std::map<utility::string_t, utility::string_t> m_Metadata;
    bool m_MetadataIsSet;
    utility::string_t m_object;
    bool m_objectIsSet;
    std::shared_ptr<Plan> m_Plan;
    bool m_PlanIsSet;
    int32_t m_Quantity;
    bool m_QuantityIsSet;
    int64_t m_Start;
    bool m_StartIsSet;
    utility::string_t m_Status;
    bool m_StatusIsSet;
    std::shared_ptr<SubscriptionItemCollection> m_SubscriptionItems;
    bool m_SubscriptionItemsIsSet;
    double m_TaxPercent;
    bool m_TaxPercentIsSet;
    int64_t m_TrialEnd;
    bool m_TrialEndIsSet;
    int64_t m_TrialStart;
    bool m_TrialStartIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Subscription_H_ */
