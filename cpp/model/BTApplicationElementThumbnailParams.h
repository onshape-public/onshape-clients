/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTApplicationElementThumbnailParams.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTApplicationElementThumbnailParams_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTApplicationElementThumbnailParams_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTApplicationElementThumbnailParams
    : public ModelBase
{
public:
    BTApplicationElementThumbnailParams();
    virtual ~BTApplicationElementThumbnailParams();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTApplicationElementThumbnailParams members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBase64EncodedImage() const;
    bool base64EncodedImageIsSet() const;
    void unsetBase64EncodedImage();

    void setBase64EncodedImage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getImageHeight() const;
    bool imageHeightIsSet() const;
    void unsetImageHeight();

    void setImageHeight(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getImageWidth() const;
    bool imageWidthIsSet() const;
    void unsetImageWidth();

    void setImageWidth(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsPrimary() const;
    bool isPrimaryIsSet() const;
    void unsetIsPrimary();

    void setIsPrimary(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUniqueId() const;
    bool uniqueIdIsSet() const;
    void unsetUniqueId();

    void setUniqueId(const utility::string_t& value);


protected:
    utility::string_t m_Base64EncodedImage;
    bool m_Base64EncodedImageIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    int32_t m_ImageHeight;
    bool m_ImageHeightIsSet;
    int32_t m_ImageWidth;
    bool m_ImageWidthIsSet;
    bool m_IsPrimary;
    bool m_IsPrimaryIsSet;
    utility::string_t m_UniqueId;
    bool m_UniqueIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTApplicationElementThumbnailParams_H_ */
