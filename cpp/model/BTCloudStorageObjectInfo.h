/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTCloudStorageObjectInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTCloudStorageObjectInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTCloudStorageObjectInfo_H_


#include "../ModelBase.h"

#include "BTThumbnailInfo.h"
#include <cpprest/details/basic_types.h>
#include "BTUserBasicSummaryInfo.h"
#include "BTOwnerInfo.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTCloudStorageObjectInfo
    : public ModelBase
{
public:
    BTCloudStorageObjectInfo();
    virtual ~BTCloudStorageObjectInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTCloudStorageObjectInfo members

    /// <summary>
    /// 
    /// </summary>
    bool isCanMove() const;
    bool canMoveIsSet() const;
    void unsetCanMove();

    void setCanMove(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCloudStorageAccountId() const;
    bool cloudStorageAccountIdIsSet() const;
    void unsetCloudStorageAccountId();

    void setCloudStorageAccountId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCloudStorageObjectId() const;
    bool cloudStorageObjectIdIsSet() const;
    void unsetCloudStorageObjectId();

    void setCloudStorageObjectId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getCloudStorageProvider() const;
    bool cloudStorageProviderIsSet() const;
    void unsetCloudStorageProvider();

    void setCloudStorageProvider(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreatedAt();

    void setCreatedAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTUserBasicSummaryInfo> getCreatedBy() const;
    bool createdByIsSet() const;
    void unsetCreatedBy();

    void setCreatedBy(const std::shared_ptr<BTUserBasicSummaryInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatedById() const;
    bool createdByIdIsSet() const;
    void unsetCreatedById();

    void setCreatedById(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHref() const;
    bool hrefIsSet() const;
    void unsetHref();

    void setHref(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIconLink() const;
    bool iconLinkIsSet() const;
    void unsetIconLink();

    void setIconLink(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsContainer() const;
    bool isContainerIsSet() const;
    void unsetIsContainer();

    void setIsContainer(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsEnterpriseOwned() const;
    bool isEnterpriseOwnedIsSet() const;
    void unsetIsEnterpriseOwned();

    void setIsEnterpriseOwned(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsMutable() const;
    bool isMutableIsSet() const;
    void unsetIsMutable();

    void setIsMutable(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMimeType() const;
    bool mimeTypeIsSet() const;
    void unsetMimeType();

    void setMimeType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getModifiedAt() const;
    bool modifiedAtIsSet() const;
    void unsetModifiedAt();

    void setModifiedAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTUserBasicSummaryInfo> getModifiedBy() const;
    bool modifiedByIsSet() const;
    void unsetModifiedBy();

    void setModifiedBy(const std::shared_ptr<BTUserBasicSummaryInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getModifiedById() const;
    bool modifiedByIdIsSet() const;
    void unsetModifiedById();

    void setModifiedById(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTOwnerInfo> getOwner() const;
    bool ownerIsSet() const;
    void unsetOwner();

    void setOwner(const std::shared_ptr<BTOwnerInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getParentId() const;
    bool parentIdIsSet() const;
    void unsetParentId();

    void setParentId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProjectId() const;
    bool projectIdIsSet() const;
    void unsetProjectId();

    void setProjectId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getResourceType() const;
    bool resourceTypeIsSet() const;
    void unsetResourceType();

    void setResourceType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getSizeBytes() const;
    bool sizeBytesIsSet() const;
    void unsetSizeBytes();

    void setSizeBytes(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTThumbnailInfo> getThumbnailInfo() const;
    bool thumbnailInfoIsSet() const;
    void unsetThumbnailInfo();

    void setThumbnailInfo(const std::shared_ptr<BTThumbnailInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTreeHref() const;
    bool treeHrefIsSet() const;
    void unsetTreeHref();

    void setTreeHref(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getViewRef() const;
    bool viewRefIsSet() const;
    void unsetViewRef();

    void setViewRef(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWebViewLink() const;
    bool webViewLinkIsSet() const;
    void unsetWebViewLink();

    void setWebViewLink(const utility::string_t& value);


protected:
    bool m_CanMove;
    bool m_CanMoveIsSet;
    utility::string_t m_CloudStorageAccountId;
    bool m_CloudStorageAccountIdIsSet;
    utility::string_t m_CloudStorageObjectId;
    bool m_CloudStorageObjectIdIsSet;
    int32_t m_CloudStorageProvider;
    bool m_CloudStorageProviderIsSet;
    utility::datetime m_CreatedAt;
    bool m_CreatedAtIsSet;
    std::shared_ptr<BTUserBasicSummaryInfo> m_CreatedBy;
    bool m_CreatedByIsSet;
    utility::string_t m_CreatedById;
    bool m_CreatedByIdIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_Href;
    bool m_HrefIsSet;
    utility::string_t m_IconLink;
    bool m_IconLinkIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    bool m_IsContainer;
    bool m_IsContainerIsSet;
    bool m_IsEnterpriseOwned;
    bool m_IsEnterpriseOwnedIsSet;
    bool m_IsMutable;
    bool m_IsMutableIsSet;
    utility::string_t m_MimeType;
    bool m_MimeTypeIsSet;
    utility::datetime m_ModifiedAt;
    bool m_ModifiedAtIsSet;
    std::shared_ptr<BTUserBasicSummaryInfo> m_ModifiedBy;
    bool m_ModifiedByIsSet;
    utility::string_t m_ModifiedById;
    bool m_ModifiedByIdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::shared_ptr<BTOwnerInfo> m_Owner;
    bool m_OwnerIsSet;
    utility::string_t m_ParentId;
    bool m_ParentIdIsSet;
    utility::string_t m_ProjectId;
    bool m_ProjectIdIsSet;
    utility::string_t m_ResourceType;
    bool m_ResourceTypeIsSet;
    int64_t m_SizeBytes;
    bool m_SizeBytesIsSet;
    std::shared_ptr<BTThumbnailInfo> m_ThumbnailInfo;
    bool m_ThumbnailInfoIsSet;
    utility::string_t m_TreeHref;
    bool m_TreeHrefIsSet;
    utility::string_t m_ViewRef;
    bool m_ViewRefIsSet;
    utility::string_t m_WebViewLink;
    bool m_WebViewLinkIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTCloudStorageObjectInfo_H_ */
