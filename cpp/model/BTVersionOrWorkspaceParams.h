/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTVersionOrWorkspaceParams.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTVersionOrWorkspaceParams_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTVersionOrWorkspaceParams_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTVersionOrWorkspaceParams
    : public ModelBase
{
public:
    BTVersionOrWorkspaceParams();
    virtual ~BTVersionOrWorkspaceParams();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTVersionOrWorkspaceParams members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClientInteractionMode() const;
    bool clientInteractionModeIsSet() const;
    void unsetClientInteractionMode();

    void setClientInteractionMode(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocumentId() const;
    bool documentIdIsSet() const;
    void unsetDocumentId();

    void setDocumentId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isFromHistory() const;
    bool fromHistoryIsSet() const;
    void unsetFromHistory();

    void setFromHistory(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsRelease() const;
    bool isReleaseIsSet() const;
    void unsetIsRelease();

    void setIsRelease(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMicroversionId() const;
    bool microversionIdIsSet() const;
    void unsetMicroversionId();

    void setMicroversionId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getPurpose() const;
    bool purposeIsSet() const;
    void unsetPurpose();

    void setPurpose(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isReadOnly() const;
    bool readOnlyIsSet() const;
    void unsetReadOnly();

    void setReadOnly(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVersionId() const;
    bool versionIdIsSet() const;
    void unsetVersionId();

    void setVersionId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWorkspaceId() const;
    bool workspaceIdIsSet() const;
    void unsetWorkspaceId();

    void setWorkspaceId(const utility::string_t& value);


protected:
    utility::string_t m_ClientInteractionMode;
    bool m_ClientInteractionModeIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_DocumentId;
    bool m_DocumentIdIsSet;
    bool m_FromHistory;
    bool m_FromHistoryIsSet;
    bool m_IsRelease;
    bool m_IsReleaseIsSet;
    utility::string_t m_MicroversionId;
    bool m_MicroversionIdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    int32_t m_Purpose;
    bool m_PurposeIsSet;
    bool m_ReadOnly;
    bool m_ReadOnlyIsSet;
    utility::string_t m_VersionId;
    bool m_VersionIdIsSet;
    utility::string_t m_WorkspaceId;
    bool m_WorkspaceIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTVersionOrWorkspaceParams_H_ */
