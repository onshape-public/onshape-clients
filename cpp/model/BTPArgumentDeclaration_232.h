/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTPArgumentDeclaration_232.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTPArgumentDeclaration_232_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTPArgumentDeclaration_232_H_


#include "BTPNode_7.h"
#include "BTPArgumentDeclaration_232_allOf.h"
#include "BTPTypeName_290.h"
#include <cpprest/details/basic_types.h>
#include "BTPIdentifier_8.h"
#include "BTPSpace_10.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTPArgumentDeclaration_232
    : public BTPNode_7
{
public:
    BTPArgumentDeclaration_232();
    virtual ~BTPArgumentDeclaration_232();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTPArgumentDeclaration_232 members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStandardType() const;
    bool standardTypeIsSet() const;
    void unsetStandardType();

    void setStandardType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRTypeName() const;
    bool rTypeNameIsSet() const;
    void unsetr_typeName();

    void setRTypeName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTPIdentifier_8> getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const std::shared_ptr<BTPIdentifier_8>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTPTypeName_290> getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const std::shared_ptr<BTPTypeName_290>& value);


protected:
    utility::string_t m_StandardType;
    bool m_StandardTypeIsSet;
    utility::string_t m_r_typeName;
    bool m_r_typeNameIsSet;
    std::shared_ptr<BTPIdentifier_8> m_Name;
    bool m_NameIsSet;
    std::shared_ptr<BTPTypeName_290> m_Type;
    bool m_TypeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTPArgumentDeclaration_232_H_ */
