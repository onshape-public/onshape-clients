/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTMParameterReferencePartStudio_3302.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterReferencePartStudio_3302_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterReferencePartStudio_3302_H_


#include <cpprest/details/basic_types.h>
#include "BTMParameterQueryList_148.h"
#include "BTMParameterReferenceWithConfiguration_3028.h"
#include "BTMParameterReferencePartStudio_3302_allOf.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTMParameterReferencePartStudio_3302
    : public BTMParameterReferenceWithConfiguration_3028
{
public:
    BTMParameterReferencePartStudio_3302();
    virtual ~BTMParameterReferencePartStudio_3302();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTMParameterReferencePartStudio_3302 members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTMParameterQueryList_148> getPartQuery() const;
    bool partQueryIsSet() const;
    void unsetPartQuery();

    void setPartQuery(const std::shared_ptr<BTMParameterQueryList_148>& value);

    /// <summary>
    /// 
    /// </summary>
    bool isBlockBuildFunctionAccess() const;
    bool blockBuildFunctionAccessIsSet() const;
    void unsetBlockBuildFunctionAccess();

    void setBlockBuildFunctionAccess(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStandardContentParametersId() const;
    bool standardContentParametersIdIsSet() const;
    void unsetStandardContentParametersId();

    void setStandardContentParametersId(const utility::string_t& value);


protected:
    std::shared_ptr<BTMParameterQueryList_148> m_PartQuery;
    bool m_PartQueryIsSet;
    bool m_BlockBuildFunctionAccess;
    bool m_BlockBuildFunctionAccessIsSet;
    utility::string_t m_StandardContentParametersId;
    bool m_StandardContentParametersIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTMParameterReferencePartStudio_3302_H_ */
