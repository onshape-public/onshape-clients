/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTPurchaseInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTPurchaseInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTPurchaseInfo_H_


#include "../ModelBase.h"

#include "BTCardInfo.h"
#include "BTAPIApplicationSummaryInfo.h"
#include "ProratedCharges.h"
#include "BTPlanSubscriberInfo.h"
#include <cpprest/details/basic_types.h>
#include "BTBillingPlanInfo.h"
#include "NextCharge.h"
#include <vector>
#include "Subscription.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTPurchaseInfo
    : public ModelBase
{
public:
    BTPurchaseInfo();
    virtual ~BTPurchaseInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTPurchaseInfo members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAccountId() const;
    bool accountIdIsSet() const;
    void unsetAccountId();

    void setAccountId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getActualAmountPaidCents() const;
    bool actualAmountPaidCentsIsSet() const;
    void unsetActualAmountPaidCents();

    void setActualAmountPaidCents(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getAmountCents() const;
    bool amountCentsIsSet() const;
    void unsetAmountCents();

    void setAmountCents(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTAPIApplicationSummaryInfo> getApplication() const;
    bool applicationIsSet() const;
    void unsetApplication();

    void setApplication(const std::shared_ptr<BTAPIApplicationSummaryInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCanceledAt() const;
    bool canceledAtIsSet() const;
    void unsetCanceledAt();

    void setCanceledAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTCardInfo> getCard() const;
    bool cardIsSet() const;
    void unsetCard();

    void setCard(const std::shared_ptr<BTCardInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClientId() const;
    bool clientIdIsSet() const;
    void unsetClientId();

    void setClientId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCouponAmountOff() const;
    bool couponAmountOffIsSet() const;
    void unsetCouponAmountOff();

    void setCouponAmountOff(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getCouponPercentOff() const;
    bool couponPercentOffIsSet() const;
    void unsetCouponPercentOff();

    void setCouponPercentOff(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatedBy() const;
    bool createdByIsSet() const;
    void unsetCreatedBy();

    void setCreatedBy(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();

    void setCurrency(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getDuration() const;
    bool durationIsSet() const;
    void unsetDuration();

    void setDuration(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getDurationMonths() const;
    bool durationMonthsIsSet() const;
    void unsetDurationMonths();

    void setDurationMonths(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getGroup() const;
    bool groupIsSet() const;
    void unsetGroup();

    void setGroup(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHref() const;
    bool hrefIsSet() const;
    void unsetHref();

    void setHref(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getLastModified() const;
    bool lastModifiedIsSet() const;
    void unsetLastModified();

    void setLastModified(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastModifiedBy() const;
    bool lastModifiedByIsSet() const;
    void unsetLastModifiedBy();

    void setLastModifiedBy(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getLightSeats() const;
    bool lightSeatsIsSet() const;
    void unsetLightSeats();

    void setLightSeats(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<NextCharge> getNextCharge() const;
    bool nextChargeIsSet() const;
    void unsetNextCharge();

    void setNextCharge(const std::shared_ptr<NextCharge>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getPaymentType() const;
    bool paymentTypeIsSet() const;
    void unsetPaymentType();

    void setPaymentType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isPendingCancelation() const;
    bool pendingCancelationIsSet() const;
    void unsetPendingCancelation();

    void setPendingCancelation(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTBillingPlanInfo> getPlan() const;
    bool planIsSet() const;
    void unsetPlan();

    void setPlan(const std::shared_ptr<BTBillingPlanInfo>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPlanId() const;
    bool planIdIsSet() const;
    void unsetPlanId();

    void setPlanId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPlanName() const;
    bool planNameIsSet() const;
    void unsetPlanName();

    void setPlanName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getPlanType() const;
    bool planTypeIsSet() const;
    void unsetPlanType();

    void setPlanType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ProratedCharges>>& getProratedCharges();
    bool proratedChargesIsSet() const;
    void unsetProratedCharges();

    void setProratedCharges(const std::vector<std::shared_ptr<ProratedCharges>>& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getProratedTotal() const;
    bool proratedTotalIsSet() const;
    void unsetProratedTotal();

    void setProratedTotal(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getPurchaseDate() const;
    bool purchaseDateIsSet() const;
    void unsetPurchaseDate();

    void setPurchaseDate(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getResellerName() const;
    bool resellerNameIsSet() const;
    void unsetResellerName();

    void setResellerName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getSeats() const;
    bool seatsIsSet() const;
    void unsetSeats();

    void setSeats(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getState() const;
    bool stateIsSet() const;
    void unsetState();

    void setState(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BTPlanSubscriberInfo>>& getSubscribers();
    bool subscribersIsSet() const;
    void unsetSubscribers();

    void setSubscribers(const std::vector<std::shared_ptr<BTPlanSubscriberInfo>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getSubscriptionBeginAt() const;
    bool subscriptionBeginAtIsSet() const;
    void unsetSubscriptionBeginAt();

    void setSubscriptionBeginAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getSubscriptionEndAt() const;
    bool subscriptionEndAtIsSet() const;
    void unsetSubscriptionEndAt();

    void setSubscriptionEndAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Subscription> getSubscriptionFields() const;
    bool subscriptionFieldsIsSet() const;
    void unsetSubscriptionFields();

    void setSubscriptionFields(const std::shared_ptr<Subscription>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSubscriptionId() const;
    bool subscriptionIdIsSet() const;
    void unsetSubscriptionId();

    void setSubscriptionId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getSubscriptionType() const;
    bool subscriptionTypeIsSet() const;
    void unsetSubscriptionType();

    void setSubscriptionType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getTrialEnd() const;
    bool trialEndIsSet() const;
    void unsetTrialEnd();

    void setTrialEnd(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTrialInitiatedBy() const;
    bool trialInitiatedByIsSet() const;
    void unsetTrialInitiatedBy();

    void setTrialInitiatedBy(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getViewRef() const;
    bool viewRefIsSet() const;
    void unsetViewRef();

    void setViewRef(const utility::string_t& value);


protected:
    utility::string_t m_AccountId;
    bool m_AccountIdIsSet;
    int64_t m_ActualAmountPaidCents;
    bool m_ActualAmountPaidCentsIsSet;
    int64_t m_AmountCents;
    bool m_AmountCentsIsSet;
    std::shared_ptr<BTAPIApplicationSummaryInfo> m_Application;
    bool m_ApplicationIsSet;
    utility::datetime m_CanceledAt;
    bool m_CanceledAtIsSet;
    std::shared_ptr<BTCardInfo> m_Card;
    bool m_CardIsSet;
    utility::string_t m_ClientId;
    bool m_ClientIdIsSet;
    int64_t m_CouponAmountOff;
    bool m_CouponAmountOffIsSet;
    int32_t m_CouponPercentOff;
    bool m_CouponPercentOffIsSet;
    utility::string_t m_CreatedBy;
    bool m_CreatedByIsSet;
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
    int32_t m_Duration;
    bool m_DurationIsSet;
    int32_t m_DurationMonths;
    bool m_DurationMonthsIsSet;
    utility::string_t m_Group;
    bool m_GroupIsSet;
    utility::string_t m_Href;
    bool m_HrefIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::datetime m_LastModified;
    bool m_LastModifiedIsSet;
    utility::string_t m_LastModifiedBy;
    bool m_LastModifiedByIsSet;
    int64_t m_LightSeats;
    bool m_LightSeatsIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::shared_ptr<NextCharge> m_NextCharge;
    bool m_NextChargeIsSet;
    int32_t m_PaymentType;
    bool m_PaymentTypeIsSet;
    bool m_PendingCancelation;
    bool m_PendingCancelationIsSet;
    std::shared_ptr<BTBillingPlanInfo> m_Plan;
    bool m_PlanIsSet;
    utility::string_t m_PlanId;
    bool m_PlanIdIsSet;
    utility::string_t m_PlanName;
    bool m_PlanNameIsSet;
    int32_t m_PlanType;
    bool m_PlanTypeIsSet;
    std::vector<std::shared_ptr<ProratedCharges>> m_ProratedCharges;
    bool m_ProratedChargesIsSet;
    int64_t m_ProratedTotal;
    bool m_ProratedTotalIsSet;
    utility::datetime m_PurchaseDate;
    bool m_PurchaseDateIsSet;
    utility::string_t m_ResellerName;
    bool m_ResellerNameIsSet;
    int64_t m_Seats;
    bool m_SeatsIsSet;
    int32_t m_State;
    bool m_StateIsSet;
    std::vector<std::shared_ptr<BTPlanSubscriberInfo>> m_Subscribers;
    bool m_SubscribersIsSet;
    utility::datetime m_SubscriptionBeginAt;
    bool m_SubscriptionBeginAtIsSet;
    utility::datetime m_SubscriptionEndAt;
    bool m_SubscriptionEndAtIsSet;
    std::shared_ptr<Subscription> m_SubscriptionFields;
    bool m_SubscriptionFieldsIsSet;
    utility::string_t m_SubscriptionId;
    bool m_SubscriptionIdIsSet;
    int32_t m_SubscriptionType;
    bool m_SubscriptionTypeIsSet;
    utility::datetime m_TrialEnd;
    bool m_TrialEndIsSet;
    utility::string_t m_TrialInitiatedBy;
    bool m_TrialInitiatedByIsSet;
    utility::string_t m_ViewRef;
    bool m_ViewRefIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTPurchaseInfo_H_ */
