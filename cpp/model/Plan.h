/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Plan.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Plan_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Plan_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Plan
    : public ModelBase
{
public:
    Plan();
    virtual ~Plan();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Plan members

    /// <summary>
    /// 
    /// </summary>
    int64_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCreated() const;
    bool createdIsSet() const;
    void unsetCreated();

    void setCreated(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();

    void setCurrency(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInterval() const;
    bool intervalIsSet() const;
    void unsetInterval();

    void setInterval(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getIntervalCount() const;
    bool intervalCountIsSet() const;
    void unsetIntervalCount();

    void setIntervalCount(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isLivemode() const;
    bool livemodeIsSet() const;
    void unsetLivemode();

    void setLivemode(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, utility::string_t>& getMetadata();
    bool metadataIsSet() const;
    void unsetMetadata();

    void setMetadata(const std::map<utility::string_t, utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getObject() const;
    bool objectIsSet() const;
    void unsetobject();

    void setObject(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStatementDescription() const;
    bool statementDescriptionIsSet() const;
    void unsetStatementDescription();

    void setStatementDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStatementDescriptor() const;
    bool statementDescriptorIsSet() const;
    void unsetStatementDescriptor();

    void setStatementDescriptor(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getTrialPeriodDays() const;
    bool trialPeriodDaysIsSet() const;
    void unsetTrialPeriodDays();

    void setTrialPeriodDays(int32_t value);


protected:
    int64_t m_Amount;
    bool m_AmountIsSet;
    int64_t m_Created;
    bool m_CreatedIsSet;
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Interval;
    bool m_IntervalIsSet;
    int32_t m_IntervalCount;
    bool m_IntervalCountIsSet;
    bool m_Livemode;
    bool m_LivemodeIsSet;
    std::map<utility::string_t, utility::string_t> m_Metadata;
    bool m_MetadataIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_object;
    bool m_objectIsSet;
    utility::string_t m_StatementDescription;
    bool m_StatementDescriptionIsSet;
    utility::string_t m_StatementDescriptor;
    bool m_StatementDescriptorIsSet;
    int32_t m_TrialPeriodDays;
    bool m_TrialPeriodDaysIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Plan_H_ */
