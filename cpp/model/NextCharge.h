/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * NextCharge.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_NextCharge_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_NextCharge_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  NextCharge
    : public ModelBase
{
public:
    NextCharge();
    virtual ~NextCharge();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// NextCharge members

    /// <summary>
    /// 
    /// </summary>
    int64_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCurrentPeriodEnd() const;
    bool currentPeriodEndIsSet() const;
    void unsetCurrentPeriodEnd();

    void setCurrentPeriodEnd(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInterval() const;
    bool intervalIsSet() const;
    void unsetInterval();

    void setInterval(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getTotal() const;
    bool totalIsSet() const;
    void unsetTotal();

    void setTotal(int64_t value);


protected:
    int64_t m_Amount;
    bool m_AmountIsSet;
    utility::datetime m_CurrentPeriodEnd;
    bool m_CurrentPeriodEndIsSet;
    utility::string_t m_Interval;
    bool m_IntervalIsSet;
    int64_t m_Total;
    bool m_TotalIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_NextCharge_H_ */
