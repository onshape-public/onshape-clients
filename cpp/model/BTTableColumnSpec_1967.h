/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTTableColumnSpec_1967.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTTableColumnSpec_1967_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTTableColumnSpec_1967_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "BTParameterSpec_6.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTTableColumnSpec_1967
    : public ModelBase
{
public:
    BTTableColumnSpec_1967();
    virtual ~BTTableColumnSpec_1967();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTTableColumnSpec_1967 members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BTParameterSpec_6> getDefaultCellSpec() const;
    bool defaultCellSpecIsSet() const;
    void unsetDefaultCellSpec();

    void setDefaultCellSpec(const std::shared_ptr<BTParameterSpec_6>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDefaultColumnWidthUnits() const;
    bool defaultColumnWidthUnitsIsSet() const;
    void unsetDefaultColumnWidthUnits();

    void setDefaultColumnWidthUnits(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getDefaultColumnWidthValue() const;
    bool defaultColumnWidthValueIsSet() const;
    void unsetDefaultColumnWidthValue();

    void setDefaultColumnWidthValue(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDefaultHeaderName() const;
    bool defaultHeaderNameIsSet() const;
    void unsetDefaultHeaderName();

    void setDefaultHeaderName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDefaultTextAlignment() const;
    bool defaultTextAlignmentIsSet() const;
    void unsetDefaultTextAlignment();

    void setDefaultTextAlignment(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isReadOnly() const;
    bool readOnlyIsSet() const;
    void unsetReadOnly();

    void setReadOnly(bool value);


protected:
    std::shared_ptr<BTParameterSpec_6> m_DefaultCellSpec;
    bool m_DefaultCellSpecIsSet;
    utility::string_t m_DefaultColumnWidthUnits;
    bool m_DefaultColumnWidthUnitsIsSet;
    int32_t m_DefaultColumnWidthValue;
    bool m_DefaultColumnWidthValueIsSet;
    utility::string_t m_DefaultHeaderName;
    bool m_DefaultHeaderNameIsSet;
    utility::string_t m_DefaultTextAlignment;
    bool m_DefaultTextAlignmentIsSet;
    bool m_ReadOnly;
    bool m_ReadOnlyIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTTableColumnSpec_1967_H_ */
