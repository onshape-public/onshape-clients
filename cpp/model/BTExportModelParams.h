/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTExportModelParams.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTExportModelParams_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTExportModelParams_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTExportModelParams
    : public ModelBase
{
public:
    BTExportModelParams();
    virtual ~BTExportModelParams();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTExportModelParams members

    /// <summary>
    /// 
    /// </summary>
    double getAngleTolerance() const;
    bool angleToleranceIsSet() const;
    void unsetAngleTolerance();

    void setAngleTolerance(double value);

    /// <summary>
    /// 
    /// </summary>
    bool isBatchFlatPatterns() const;
    bool batchFlatPatternsIsSet() const;
    void unsetBatchFlatPatterns();

    void setBatchFlatPatterns(bool value);

    /// <summary>
    /// 
    /// </summary>
    double getChordTolerance() const;
    bool chordToleranceIsSet() const;
    void unsetChordTolerance();

    void setChordTolerance(double value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCloudObjectId() const;
    bool cloudObjectIdIsSet() const;
    void unsetCloudObjectId();

    void setCloudObjectId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCloudStorageAccountId() const;
    bool cloudStorageAccountIdIsSet() const;
    void unsetCloudStorageAccountId();

    void setCloudStorageAccountId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getConfiguration() const;
    bool configurationIsSet() const;
    void unsetConfiguration();

    void setConfiguration(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isDeepSearchForForeignData() const;
    bool deepSearchForForeignDataIsSet() const;
    void unsetDeepSearchForForeignData();

    void setDeepSearchForForeignData(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDestinationName() const;
    bool destinationNameIsSet() const;
    void unsetDestinationName();

    void setDestinationName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocumentId() const;
    bool documentIdIsSet() const;
    void unsetDocumentId();

    void setDocumentId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocumentVersionId() const;
    bool documentVersionIdIsSet() const;
    void unsetDocumentVersionId();

    void setDocumentVersionId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getElementId() const;
    bool elementIdIsSet() const;
    void unsetElementId();

    void setElementId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getElementIds() const;
    bool elementIdsIsSet() const;
    void unsetElementIds();

    void setElementIds(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isEmailLink() const;
    bool emailLinkIsSet() const;
    void unsetEmailLink();

    void setEmailLink(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailMessage() const;
    bool emailMessageIsSet() const;
    void unsetEmailMessage();

    void setEmailMessage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailSubject() const;
    bool emailSubjectIsSet() const;
    void unsetEmailSubject();

    void setEmailSubject(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailTo() const;
    bool emailToIsSet() const;
    void unsetEmailTo();

    void setEmailTo(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isExtractToS3() const;
    bool extractToS3IsSet() const;
    void unsetExtractToS3();

    void setExtractToS3(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFeatureIds() const;
    bool featureIdsIsSet() const;
    void unsetFeatureIds();

    void setFeatureIds(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isFlatten() const;
    bool flattenIsSet() const;
    void unsetFlatten();

    void setFlatten(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFormat() const;
    bool formatIsSet() const;
    void unsetFormat();

    void setFormat(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFromUserId() const;
    bool fromUserIdIsSet() const;
    void unsetFromUserId();

    void setFromUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getGrouping() const;
    bool groupingIsSet() const;
    void unsetGrouping();

    void setGrouping(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeBendCenterlines() const;
    bool includeBendCenterlinesIsSet() const;
    void unsetIncludeBendCenterlines();

    void setIncludeBendCenterlines(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeBendLines() const;
    bool includeBendLinesIsSet() const;
    void unsetIncludeBendLines();

    void setIncludeBendLines(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeCustomProperties() const;
    bool includeCustomPropertiesIsSet() const;
    void unsetIncludeCustomProperties();

    void setIncludeCustomProperties(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeCustomPropertiesData() const;
    bool includeCustomPropertiesDataIsSet() const;
    void unsetIncludeCustomPropertiesData();

    void setIncludeCustomPropertiesData(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeExportIds() const;
    bool includeExportIdsIsSet() const;
    void unsetIncludeExportIds();

    void setIncludeExportIds(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeForeignData() const;
    bool includeForeignDataIsSet() const;
    void unsetIncludeForeignData();

    void setIncludeForeignData(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeItemsData() const;
    bool includeItemsDataIsSet() const;
    void unsetIncludeItemsData();

    void setIncludeItemsData(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeLinkedDocuments() const;
    bool includeLinkedDocumentsIsSet() const;
    void unsetIncludeLinkedDocuments();

    void setIncludeLinkedDocuments(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeReleaseManagementData() const;
    bool includeReleaseManagementDataIsSet() const;
    void unsetIncludeReleaseManagementData();

    void setIncludeReleaseManagementData(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeSketches() const;
    bool includeSketchesIsSet() const;
    void unsetIncludeSketches();

    void setIncludeSketches(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeStd() const;
    bool includeStdIsSet() const;
    void unsetIncludeStd();

    void setIncludeStd(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsPartingOut() const;
    bool isPartingOutIsSet() const;
    void unsetIsPartingOut();

    void setIsPartingOut(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLinkDocumentId() const;
    bool linkDocumentIdIsSet() const;
    void unsetLinkDocumentId();

    void setLinkDocumentId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLinkDocumentWorkspaceId() const;
    bool linkDocumentWorkspaceIdIsSet() const;
    void unsetLinkDocumentWorkspaceId();

    void setLinkDocumentWorkspaceId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getMaxFacetWidth() const;
    bool maxFacetWidthIsSet() const;
    void unsetMaxFacetWidth();

    void setMaxFacetWidth(double value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMicroversion() const;
    bool microversionIsSet() const;
    void unsetMicroversion();

    void setMicroversion(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getMinFacetWidth() const;
    bool minFacetWidthIsSet() const;
    void unsetMinFacetWidth();

    void setMinFacetWidth(double value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMode() const;
    bool modeIsSet() const;
    void unsetMode();

    void setMode(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPartIds() const;
    bool partIdsIsSet() const;
    void unsetPartIds();

    void setPartIds(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPartQuery() const;
    bool partQueryIsSet() const;
    void unsetPartQuery();

    void setPartQuery(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPassword() const;
    bool passwordIsSet() const;
    void unsetPassword();

    void setPassword(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isPasswordRequired() const;
    bool passwordRequiredIsSet() const;
    void unsetPasswordRequired();

    void setPasswordRequired(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getResolution() const;
    bool resolutionIsSet() const;
    void unsetResolution();

    void setResolution(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getScale() const;
    bool scaleIsSet() const;
    void unsetScale();

    void setScale(double value);

    /// <summary>
    /// 
    /// </summary>
    bool isSendCopyToMe() const;
    bool sendCopyToMeIsSet() const;
    void unsetSendCopyToMe();

    void setSendCopyToMe(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isSheetMetalFlat() const;
    bool sheetMetalFlatIsSet() const;
    void unsetSheetMetalFlat();

    void setSheetMetalFlat(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isSplinesAsPolylines() const;
    bool splinesAsPolylinesIsSet() const;
    void unsetSplinesAsPolylines();

    void setSplinesAsPolylines(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isStoreInDocument() const;
    bool storeInDocumentIsSet() const;
    void unsetStoreInDocument();

    void setStoreInDocument(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isTriggerAutoDownload() const;
    bool triggerAutoDownloadIsSet() const;
    void unsetTriggerAutoDownload();

    void setTriggerAutoDownload(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUnits() const;
    bool unitsIsSet() const;
    void unsetUnits();

    void setUnits(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserId() const;
    bool userIdIsSet() const;
    void unsetUserId();

    void setUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getValidForDays() const;
    bool validForDaysIsSet() const;
    void unsetValidForDays();

    void setValidForDays(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVersion() const;
    bool versionIsSet() const;
    void unsetVersion();

    void setVersion(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getView() const;
    bool viewIsSet() const;
    void unsetView();

    void setView(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWorkspaceId() const;
    bool workspaceIdIsSet() const;
    void unsetWorkspaceId();

    void setWorkspaceId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isZipSingleFileOutput() const;
    bool zipSingleFileOutputIsSet() const;
    void unsetZipSingleFileOutput();

    void setZipSingleFileOutput(bool value);


protected:
    double m_AngleTolerance;
    bool m_AngleToleranceIsSet;
    bool m_BatchFlatPatterns;
    bool m_BatchFlatPatternsIsSet;
    double m_ChordTolerance;
    bool m_ChordToleranceIsSet;
    utility::string_t m_CloudObjectId;
    bool m_CloudObjectIdIsSet;
    utility::string_t m_CloudStorageAccountId;
    bool m_CloudStorageAccountIdIsSet;
    utility::string_t m_Configuration;
    bool m_ConfigurationIsSet;
    bool m_DeepSearchForForeignData;
    bool m_DeepSearchForForeignDataIsSet;
    utility::string_t m_DestinationName;
    bool m_DestinationNameIsSet;
    utility::string_t m_DocumentId;
    bool m_DocumentIdIsSet;
    utility::string_t m_DocumentVersionId;
    bool m_DocumentVersionIdIsSet;
    utility::string_t m_ElementId;
    bool m_ElementIdIsSet;
    utility::string_t m_ElementIds;
    bool m_ElementIdsIsSet;
    bool m_EmailLink;
    bool m_EmailLinkIsSet;
    utility::string_t m_EmailMessage;
    bool m_EmailMessageIsSet;
    utility::string_t m_EmailSubject;
    bool m_EmailSubjectIsSet;
    utility::string_t m_EmailTo;
    bool m_EmailToIsSet;
    bool m_ExtractToS3;
    bool m_ExtractToS3IsSet;
    utility::string_t m_FeatureIds;
    bool m_FeatureIdsIsSet;
    bool m_Flatten;
    bool m_FlattenIsSet;
    utility::string_t m_Format;
    bool m_FormatIsSet;
    utility::string_t m_FromUserId;
    bool m_FromUserIdIsSet;
    utility::string_t m_Grouping;
    bool m_GroupingIsSet;
    bool m_IncludeBendCenterlines;
    bool m_IncludeBendCenterlinesIsSet;
    bool m_IncludeBendLines;
    bool m_IncludeBendLinesIsSet;
    bool m_IncludeCustomProperties;
    bool m_IncludeCustomPropertiesIsSet;
    bool m_IncludeCustomPropertiesData;
    bool m_IncludeCustomPropertiesDataIsSet;
    bool m_IncludeExportIds;
    bool m_IncludeExportIdsIsSet;
    bool m_IncludeForeignData;
    bool m_IncludeForeignDataIsSet;
    bool m_IncludeItemsData;
    bool m_IncludeItemsDataIsSet;
    bool m_IncludeLinkedDocuments;
    bool m_IncludeLinkedDocumentsIsSet;
    bool m_IncludeReleaseManagementData;
    bool m_IncludeReleaseManagementDataIsSet;
    bool m_IncludeSketches;
    bool m_IncludeSketchesIsSet;
    bool m_IncludeStd;
    bool m_IncludeStdIsSet;
    bool m_IsPartingOut;
    bool m_IsPartingOutIsSet;
    utility::string_t m_LinkDocumentId;
    bool m_LinkDocumentIdIsSet;
    utility::string_t m_LinkDocumentWorkspaceId;
    bool m_LinkDocumentWorkspaceIdIsSet;
    double m_MaxFacetWidth;
    bool m_MaxFacetWidthIsSet;
    utility::string_t m_Microversion;
    bool m_MicroversionIsSet;
    double m_MinFacetWidth;
    bool m_MinFacetWidthIsSet;
    utility::string_t m_Mode;
    bool m_ModeIsSet;
    utility::string_t m_PartIds;
    bool m_PartIdsIsSet;
    utility::string_t m_PartQuery;
    bool m_PartQueryIsSet;
    utility::string_t m_Password;
    bool m_PasswordIsSet;
    bool m_PasswordRequired;
    bool m_PasswordRequiredIsSet;
    utility::string_t m_Resolution;
    bool m_ResolutionIsSet;
    double m_Scale;
    bool m_ScaleIsSet;
    bool m_SendCopyToMe;
    bool m_SendCopyToMeIsSet;
    bool m_SheetMetalFlat;
    bool m_SheetMetalFlatIsSet;
    bool m_SplinesAsPolylines;
    bool m_SplinesAsPolylinesIsSet;
    bool m_StoreInDocument;
    bool m_StoreInDocumentIsSet;
    bool m_TriggerAutoDownload;
    bool m_TriggerAutoDownloadIsSet;
    utility::string_t m_Units;
    bool m_UnitsIsSet;
    utility::string_t m_UserId;
    bool m_UserIdIsSet;
    int32_t m_ValidForDays;
    bool m_ValidForDaysIsSet;
    utility::string_t m_Version;
    bool m_VersionIsSet;
    utility::string_t m_View;
    bool m_ViewIsSet;
    utility::string_t m_WorkspaceId;
    bool m_WorkspaceIdIsSet;
    bool m_ZipSingleFileOutput;
    bool m_ZipSingleFileOutputIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTExportModelParams_H_ */
