/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTNamedViewInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTNamedViewInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTNamedViewInfo_H_


#include "../ModelBase.h"

#include "BTSectionPlaneInfo.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTNamedViewInfo
    : public ModelBase
{
public:
    BTNamedViewInfo();
    virtual ~BTNamedViewInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTNamedViewInfo members

    /// <summary>
    /// 
    /// </summary>
    double getAngle() const;
    bool angleIsSet() const;
    void unsetAngle();

    void setAngle(double value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<double>& getCameraViewport();
    bool cameraViewportIsSet() const;
    void unsetCameraViewport();

    void setCameraViewport(std::vector<double> value);

    /// <summary>
    /// 
    /// </summary>
    bool isPerspective() const;
    bool perspectiveIsSet() const;
    void unsetPerspective();

    void setPerspective(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BTSectionPlaneInfo>>& getSectionPlanes();
    bool sectionPlanesIsSet() const;
    void unsetSectionPlanes();

    void setSectionPlanes(const std::vector<std::shared_ptr<BTSectionPlaneInfo>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<double>& getViewMatrix();
    bool viewMatrixIsSet() const;
    void unsetViewMatrix();

    void setViewMatrix(std::vector<double> value);


protected:
    double m_Angle;
    bool m_AngleIsSet;
    std::vector<double> m_CameraViewport;
    bool m_CameraViewportIsSet;
    bool m_Perspective;
    bool m_PerspectiveIsSet;
    std::vector<std::shared_ptr<BTSectionPlaneInfo>> m_SectionPlanes;
    bool m_SectionPlanesIsSet;
    std::vector<double> m_ViewMatrix;
    bool m_ViewMatrixIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTNamedViewInfo_H_ */
