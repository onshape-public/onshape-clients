/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTFeatureScriptEvalCall_2377.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTFeatureScriptEvalCall_2377_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTFeatureScriptEvalCall_2377_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTFeatureScriptEvalCall_2377
    : public ModelBase
{
public:
    BTFeatureScriptEvalCall_2377();
    virtual ~BTFeatureScriptEvalCall_2377();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTFeatureScriptEvalCall_2377 members

    /// <summary>
    /// 
    /// </summary>
    int32_t getLibraryVersion() const;
    bool libraryVersionIsSet() const;
    void unsetLibraryVersion();

    void setLibraryVersion(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isMicroversionSkew() const;
    bool microversionSkewIsSet() const;
    void unsetMicroversionSkew();

    void setMicroversionSkew(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, std::vector<utility::string_t>>& getQueries();
    bool queriesIsSet() const;
    void unsetQueries();

    void setQueries(const std::map<utility::string_t, std::vector<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    bool isRejectMicroversionSkew() const;
    bool rejectMicroversionSkewIsSet() const;
    void unsetRejectMicroversionSkew();

    void setRejectMicroversionSkew(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getScript() const;
    bool scriptIsSet() const;
    void unsetScript();

    void setScript(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSerializationVersion() const;
    bool serializationVersionIsSet() const;
    void unsetSerializationVersion();

    void setSerializationVersion(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSourceMicroversion() const;
    bool sourceMicroversionIsSet() const;
    void unsetSourceMicroversion();

    void setSourceMicroversion(const utility::string_t& value);


protected:
    int32_t m_LibraryVersion;
    bool m_LibraryVersionIsSet;
    bool m_MicroversionSkew;
    bool m_MicroversionSkewIsSet;
    std::map<utility::string_t, std::vector<utility::string_t>> m_Queries;
    bool m_QueriesIsSet;
    bool m_RejectMicroversionSkew;
    bool m_RejectMicroversionSkewIsSet;
    utility::string_t m_Script;
    bool m_ScriptIsSet;
    utility::string_t m_SerializationVersion;
    bool m_SerializationVersionIsSet;
    utility::string_t m_SourceMicroversion;
    bool m_SourceMicroversionIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTFeatureScriptEvalCall_2377_H_ */
