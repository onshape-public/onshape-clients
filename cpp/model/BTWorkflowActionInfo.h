/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTWorkflowActionInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTWorkflowActionInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTWorkflowActionInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTWorkflowActionInfo
    : public ModelBase
{
public:
    BTWorkflowActionInfo();
    virtual ~BTWorkflowActionInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTWorkflowActionInfo members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAction() const;
    bool actionIsSet() const;
    void unsetAction();

    void setAction(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isAllowIfApprovers() const;
    bool allowIfApproversIsSet() const;
    void unsetAllowIfApprovers();

    void setAllowIfApprovers(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isAllowIfNoApprovers() const;
    bool allowIfNoApproversIsSet() const;
    void unsetAllowIfNoApprovers();

    void setAllowIfNoApprovers(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isAlwaysAllow() const;
    bool alwaysAllowIsSet() const;
    void unsetAlwaysAllow();

    void setAlwaysAllow(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsAdminOverride() const;
    bool isAdminOverrideIsSet() const;
    void unsetIsAdminOverride();

    void setIsAdminOverride(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsApproverAction() const;
    bool isApproverActionIsSet() const;
    void unsetIsApproverAction();

    void setIsApproverAction(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLabel() const;
    bool labelIsSet() const;
    void unsetLabel();

    void setLabel(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getRequiredProperties();
    bool requiredPropertiesIsSet() const;
    void unsetRequiredProperties();

    void setRequiredProperties(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTooltip() const;
    bool tooltipIsSet() const;
    void unsetTooltip();

    void setTooltip(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUiHint() const;
    bool uiHintIsSet() const;
    void unsetUiHint();

    void setUiHint(const utility::string_t& value);


protected:
    utility::string_t m_Action;
    bool m_ActionIsSet;
    bool m_AllowIfApprovers;
    bool m_AllowIfApproversIsSet;
    bool m_AllowIfNoApprovers;
    bool m_AllowIfNoApproversIsSet;
    bool m_AlwaysAllow;
    bool m_AlwaysAllowIsSet;
    bool m_IsAdminOverride;
    bool m_IsAdminOverrideIsSet;
    bool m_IsApproverAction;
    bool m_IsApproverActionIsSet;
    utility::string_t m_Label;
    bool m_LabelIsSet;
    std::vector<utility::string_t> m_RequiredProperties;
    bool m_RequiredPropertiesIsSet;
    utility::string_t m_Tooltip;
    bool m_TooltipIsSet;
    utility::string_t m_UiHint;
    bool m_UiHintIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTWorkflowActionInfo_H_ */
