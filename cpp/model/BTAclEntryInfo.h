/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTAclEntryInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTAclEntryInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTAclEntryInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Object.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTAclEntryInfo
    : public ModelBase
{
public:
    BTAclEntryInfo();
    virtual ~BTAclEntryInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTAclEntryInfo members

    /// <summary>
    /// 
    /// </summary>
    bool isAcceptOwnerTransfer() const;
    bool acceptOwnerTransferIsSet() const;
    void unsetAcceptOwnerTransfer();

    void setAcceptOwnerTransfer(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCompanyName() const;
    bool companyNameIsSet() const;
    void unsetCompanyName();

    void setCompanyName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isEnterpriseMember() const;
    bool enterpriseMemberIsSet() const;
    void unsetEnterpriseMember();

    void setEnterpriseMember(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEntryId() const;
    bool entryIdIsSet() const;
    void unsetEntryId();

    void setEntryId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEntryState() const;
    bool entryStateIsSet() const;
    void unsetEntryState();

    void setEntryState(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getEntryType() const;
    bool entryTypeIsSet() const;
    void unsetEntryType();

    void setEntryType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getImage() const;
    bool imageIsSet() const;
    void unsetImage();

    void setImage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getObjectId() const;
    bool objectIdIsSet() const;
    void unsetObjectId();

    void setObjectId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isPendingOwnerTransfer() const;
    bool pendingOwnerTransferIsSet() const;
    void unsetPendingOwnerTransfer();

    void setPendingOwnerTransfer(bool value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getPermission() const;
    bool permissionIsSet() const;
    void unsetPermission();

    void setPermission(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getPermissionSet() const;
    bool permissionSetIsSet() const;
    void unsetPermissionSet();

    void setPermissionSet(const std::shared_ptr<Object>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTeamName() const;
    bool teamNameIsSet() const;
    void unsetTeamName();

    void setTeamName(const utility::string_t& value);


protected:
    bool m_AcceptOwnerTransfer;
    bool m_AcceptOwnerTransferIsSet;
    utility::string_t m_CompanyName;
    bool m_CompanyNameIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    bool m_EnterpriseMember;
    bool m_EnterpriseMemberIsSet;
    utility::string_t m_EntryId;
    bool m_EntryIdIsSet;
    utility::string_t m_EntryState;
    bool m_EntryStateIsSet;
    int32_t m_EntryType;
    bool m_EntryTypeIsSet;
    utility::string_t m_Image;
    bool m_ImageIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_ObjectId;
    bool m_ObjectIdIsSet;
    bool m_PendingOwnerTransfer;
    bool m_PendingOwnerTransferIsSet;
    int64_t m_Permission;
    bool m_PermissionIsSet;
    std::shared_ptr<Object> m_PermissionSet;
    bool m_PermissionSetIsSet;
    utility::string_t m_TeamName;
    bool m_TeamNameIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTAclEntryInfo_H_ */
