/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTOccurrenceFilter_166.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTOccurrenceFilter_166_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTOccurrenceFilter_166_H_


#include "BTOccurrenceFilter_166_allOf.h"
#include <cpprest/details/basic_types.h>
#include "BTQueryFilter_183.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTOccurrenceFilter_166
    : public BTQueryFilter_183
{
public:
    BTOccurrenceFilter_166();
    virtual ~BTOccurrenceFilter_166();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTOccurrenceFilter_166 members

    /// <summary>
    /// 
    /// </summary>
    bool isTopLevelOnly() const;
    bool topLevelOnlyIsSet() const;
    void unsetTopLevelOnly();

    void setTopLevelOnly(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludeSketch() const;
    bool excludeSketchIsSet() const;
    void unsetExcludeSketch();

    void setExcludeSketch(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isSolidOrCompositeBodyOnly() const;
    bool solidOrCompositeBodyOnlyIsSet() const;
    void unsetSolidOrCompositeBodyOnly();

    void setSolidOrCompositeBodyOnly(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludeSubAssemblies() const;
    bool excludeSubAssembliesIsSet() const;
    void unsetExcludeSubAssemblies();

    void setExcludeSubAssemblies(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludeSuppressed() const;
    bool excludeSuppressedIsSet() const;
    void unsetExcludeSuppressed();

    void setExcludeSuppressed(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludeFlattenedParts() const;
    bool excludeFlattenedPartsIsSet() const;
    void unsetExcludeFlattenedParts();

    void setExcludeFlattenedParts(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludePatternInstances() const;
    bool excludePatternInstancesIsSet() const;
    void unsetExcludePatternInstances();

    void setExcludePatternInstances(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludePatternOccurrence() const;
    bool includePatternOccurrenceIsSet() const;
    void unsetIncludePatternOccurrence();

    void setIncludePatternOccurrence(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludeStudioInserts() const;
    bool excludeStudioInsertsIsSet() const;
    void unsetExcludeStudioInserts();

    void setExcludeStudioInserts(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isExcludeStandardContent() const;
    bool excludeStandardContentIsSet() const;
    void unsetExcludeStandardContent();

    void setExcludeStandardContent(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIncludeAssemblyRoot() const;
    bool includeAssemblyRootIsSet() const;
    void unsetIncludeAssemblyRoot();

    void setIncludeAssemblyRoot(bool value);


protected:
    bool m_TopLevelOnly;
    bool m_TopLevelOnlyIsSet;
    bool m_ExcludeSketch;
    bool m_ExcludeSketchIsSet;
    bool m_SolidOrCompositeBodyOnly;
    bool m_SolidOrCompositeBodyOnlyIsSet;
    bool m_ExcludeSubAssemblies;
    bool m_ExcludeSubAssembliesIsSet;
    bool m_ExcludeSuppressed;
    bool m_ExcludeSuppressedIsSet;
    bool m_ExcludeFlattenedParts;
    bool m_ExcludeFlattenedPartsIsSet;
    bool m_ExcludePatternInstances;
    bool m_ExcludePatternInstancesIsSet;
    bool m_IncludePatternOccurrence;
    bool m_IncludePatternOccurrenceIsSet;
    bool m_ExcludeStudioInserts;
    bool m_ExcludeStudioInsertsIsSet;
    bool m_ExcludeStandardContent;
    bool m_ExcludeStandardContentIsSet;
    bool m_IncludeAssemblyRoot;
    bool m_IncludeAssemblyRootIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTOccurrenceFilter_166_H_ */
