/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.113
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BTAssemblyFeatureDataInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BTAssemblyFeatureDataInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BTAssemblyFeatureDataInfo_H_


#include "../ModelBase.h"

#include "BTAssemblyMatedEntity.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  BTAssemblyFeatureDataInfo
    : public ModelBase
{
public:
    BTAssemblyFeatureDataInfo();
    virtual ~BTAssemblyFeatureDataInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BTAssemblyFeatureDataInfo members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMateType() const;
    bool mateTypeIsSet() const;
    void unsetMateType();

    void setMateType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BTAssemblyMatedEntity>>& getMatedEntities();
    bool matedEntitiesIsSet() const;
    void unsetMatedEntities();

    void setMatedEntities(const std::vector<std::shared_ptr<BTAssemblyMatedEntity>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);


protected:
    utility::string_t m_MateType;
    bool m_MateTypeIsSet;
    std::vector<std::shared_ptr<BTAssemblyMatedEntity>> m_MatedEntities;
    bool m_MatedEntitiesIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BTAssemblyFeatureDataInfo_H_ */
